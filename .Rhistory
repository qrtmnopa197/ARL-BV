x_start <- 1.2*margin_factor
x_end <- NA
y_start <- .6*margin_factor
y_end <- NA
} else if (c == 4){
bars_df[4:6,c(2,4)] <- bars_df[4:6,c(2,4)] + .0003
mean_vecs_df <- filter(mean_vecs_df,vector != "resid") #residual shows on plot but should be 0
#set plot limits
x_start <- -.06
x_end <- -.12*margin_factor
y_start <- NA
y_end <- -.04*margin_factor
}
# create plot for contour, means, error bars
plot <- ggplot() +
geom_vline(aes(xintercept=0), color="black",size = .6) +
geom_hline(aes(yintercept=0), color="black",size = .6) +
geom_density_2d(data=contour_df,aes(x=x,y=y,color="#FAFAFA",alpha=..level..)) +
geom_segment(data = mean_vecs_df, aes(x = x, y = y, xend = xend, yend = yend, color = vector),
arrow = arrow(type = "closed", length = unit(0.15, "inches")),size = 6.5) +
geom_segment(data = bars_df, aes(x = x, y = y, xend = xend, yend = yend, color = vector),
size = 0.75) +
scale_color_manual(values=c("SV"="dark blue","PE"="dark green","CC"="#9B1010","resid"="gray","effects"="black",
"SV_m"="#3368FF","PE_m"="#6fc276","CC_m"="#df4a34","resid_m"="gray","effects_m"="black")) +
theme(panel.background = element_rect(fill = "#F0F0F0"),
legend.position = "none",
axis.text = element_blank(),
axis.ticks = element_blank()) +
coord_cartesian(xlim=c(x_start, x_end),
ylim=c(y_start, y_end)) +
labs(title = NULL, x = NULL, y = NULL)
plot_list[[c]] <- plot
}
# Grid arrange and display
grid_ob <- gridExtra::grid.arrange(grobs = plot_list, ncol = 2)
ggsave("/Users/dp/projects/spring_2022_study/manuscript/figures/s2_estvec.png",grid_ob,width=12,height=12)
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
install.packages("ddpcr")
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
##SET MANUALLY
path_to_project_directory <- "~/projects/ARL_bv/"
path_to_s22 <- "~/projects/spring_2022_study/"
path_to_arl <- "~/projects/ARL/"
ids_to_exclude <- c('86041',
ids_to_exclude <- c('86041',
'6398dc9eee4c333e1712e777',
'6172ba772342dcc9343a29db',
'5c10724111fe9a00013cd815',
'63adc5b745a55a45622d0fca',
'62b05d0902f003ad813fcc44',
'5c112b5d8124060001bfa35f',
'61109146680cc2b440c01c2a',
'5d531dbf8c48ca00018560a7',
'6172b85dcc19bffb22604f1b',
'5e4aa3729d301e000cf8ced9',
'5e837e917441520b9c662931',
'58a477c660cd820001e9a5d6',
'60c3f23e89a2b54322a2d861',
'640537ac273bd17dcb152d4d',
'58d2cb10f5899100018a05b8',
'5e987098f1bb6707dca13f5b',
'5f58d7941af44708223b94da',
'62e2d5c238c450c3579dfa91',
'5c3393d9f53f7a000119160f',
'6109e6596c52fa1f853b16c2',
'5bc151ece6491a00013a21f3',
'614ee5e28a2f0a07d4d639dd',
'60f6cd4f42b3b160be558774',
'612d227e68d8bf942e6091da',
'59014ee029f42300013cc5b7',
'5ae21dfffef71c0001be9caf',
'5e7d031be805560ae6b93dba',
'630386f64c5bbd56ab1c3b0f',
'612fb53d3127a179555c1ae3',
'5fce736898fa590803b3b0d8',
'56a37d86dbe850000bfcef9d',
'63ff70394f575c66d6c1c9a3',
'5fd15934025b991384ef1116',
'5dd1ab5dd3ac2a21600f87b8',
'5f9115299908a021dfcf4fae',
'5d4732b70829350016ed314d',
'5fa86899f519ba6f291dbf41',
'5fc6a3a40fa45d0875801073',
'636590165e6fcc3e84ee2b6d',
'5cbe2edd577eb000184124b9',
'5e8bfe353faaeb0efb3eba88',
'645466e1bd17070ac5692eaf',
'62840ccca4e83b85b1c11a27',
'5e9fb21375fbf815d491d394',
'63ed0ea6e613f50dfb1da55c',
'6171e8e245a38a69a90285c5',
'5b20c5e04c72120001f25dda',
'5a6eac90d5d4cb0001d6815a',
'5d42e88d7252cf0001e09d26',
'84610',
'88189',
'89020',
'89896',
'89665',
'89140',
'89773',
'89935',
'89947',
'89833',
'89536',
'88984',
'89485',
'89728',
'89788',
'86209',
'79864',
'89167',
'89365',
'89509',
'88171',
'87580',
'89830',
'90001',
'90172',
'89581',
'88039',
'87316',
'89416',
'87694',
'89623',
'79993',
'82774',
'87358',
'80944',
'87502',
'89626',
'88198',
'87727',
'89572',
'90166',
'87565',
'88228',
'87664',
'79948',
'87319',
'89749',
'89671',
'89692',
'89500',
'90007',
'61585c543992a499cf335e6e',
'89587',
"60ddc7abdf6661b9c294691f",
"61549a2caa92d84f392000e9",
"644857a2d21eca3ffb31101e",
"577d11f88b3e2300016d74a0",
"5907f9e49ae6ed000160dc4b",
"59cf062758b71700019882d4",
"5a0071766e1ea9000124db35",
"5a02083e087f2e0001eadbdbv",
"5a8f3dd5eea3d300016ece86",
"5b060d9e68eff50001d1a2c1",
"5b066e00f58f8400018b0906",
"5bb4e16389233700011354f8",
"5be36bc924f70e00018afd68",
"5be4c8d0d4079000014c0998",
"5c4bc384b4f50700015dd0a3",
"5c6e2e85806b55000119d515",
"5ca3ccae7958d0001689df68",
"5d092069fb1a540001dd5028",
"5d254db8bb2e30001933fe36",
"5d264dc7e4a0cb001a3efea6",
"5d4e212b81ca1c001b21672c",
"5dcca657854936945d68eaa9",
"5dd03c5486c8861300974102",
"5dd3f4045686c13de81c0b20",
"5dd43c63390fb6428d4974f0",
"5dd5a02b4fee995505ee89c2",
"5dd5c04f86c88658b24d4cde",
"5de7d12c26dd95000b6824c5",
"5e4465013f75e52fc82f7096",
"5e519c1b7243ea1d0aa361d6",
"5eb44aa8de8a2a291bd522df",
"5ec49137e7928537488485ea",
"5ecbfc627a51250bfb1f297f",
"5efcf906346ca111efac889f",
"5f3ac1732efa0a74f975b1a8",
"5f95a44920f542417f4263cb",
"5fbae54831099083583afff0",
"5fc10e3c8200cf0b1b66714c",
"5ff1fd761d6cb468718cdbeb",
"60045900ccb68e4bdd23111e",
"6019bbb66e5c2815ba3728b6",
"6020606d7b0258677b881f63",
"6088c08b5db0d7af3daf4b69",
"609b6c918ad180505fefd919",
"60b64f8fcb8c7f069a44a0e9",
"60b8e59ef963cd7c6989cd37",
"60cd717e463162435e3b7d46",
"60f98abd446a8ee5ed91a8cd",
"60ff46f0d588d3f6f641a0ee",
"6105f4dcf71fdd55fa93b7f5",
"6107088428de1480e9588e38",
"610a151c96de07b15f28c8cb",
"610c2a0c28529dc4e1b46f0c",
"611276cd39c2179c678fca78",
"61267e282a445af9eb95beae",
"6136dcd3faf36cac08e0438f",
"6156a0460b95fa57be8312c4",
"6159fe7811a7e1b94401c33f",
"61632b52ab37a7fde834300f",
"61fa943b5719bc09cb834ebb",
"627a9c07dd6b4cb9de3a9222",
"62827896d034545333f4610c",
"628fb4c3880a08418cedd2d2",
"62a0a145febfebefa7162539",
"62b1f567d5f22515024421f1",
"62c431f8b8e7dec0d2c03ea7",
"62c43f3dc521456f7320356f",
"62f7a739f21a1669968bae73",
"631b32b0796f2941b55e7d58",
"63614cab87b22b72231c66e0",
"63644514902f60174b4b29a1",
"6372d1f14a6bd3713c1c0acf",
"6373aee9c736637f71011482",
"638144b112820e51c06fb151",
"638b595f301bf0f33f345084",
"63b4dd8e84ed3fa65db72f4d",
"63c09186d75a9bbd3bec5652",
"63c25e4d8faec4d0ce9b0971",
"63ce8e557f1649202fdb045f",
"63e42833b46647e4119fbcb9",
"63e5b3e89a3823139cb9d35e",
"63f79194eb27c9dc523185bd",
"6400d88d96f94773b356d8f1",
"640c92a322b87202716ce6a6",
"64360bec4a0f7a0288f847fa",
"6442e71471e6b5dda4f99988") #Ps whose data you don't want to analyze even if it looks good. Many of these are subjects from previous versions of ARL-BV. The last three are subjects who didn't submit.
source("~/projects/ARL_bv/code/arlbv_master_script.R", echo=TRUE)
ids_to_exclude <- c('86041',
'6398dc9eee4c333e1712e777',
'6172ba772342dcc9343a29db',
'5c10724111fe9a00013cd815',
'63adc5b745a55a45622d0fca',
'62b05d0902f003ad813fcc44',
'5c112b5d8124060001bfa35f',
'61109146680cc2b440c01c2a',
'5d531dbf8c48ca00018560a7',
'6172b85dcc19bffb22604f1b',
'5e4aa3729d301e000cf8ced9',
'5e837e917441520b9c662931',
'58a477c660cd820001e9a5d6',
'60c3f23e89a2b54322a2d861',
'640537ac273bd17dcb152d4d',
'58d2cb10f5899100018a05b8',
'5e987098f1bb6707dca13f5b',
'5f58d7941af44708223b94da',
'62e2d5c238c450c3579dfa91',
'5c3393d9f53f7a000119160f',
'6109e6596c52fa1f853b16c2',
'5bc151ece6491a00013a21f3',
'614ee5e28a2f0a07d4d639dd',
'60f6cd4f42b3b160be558774',
'612d227e68d8bf942e6091da',
'59014ee029f42300013cc5b7',
'5ae21dfffef71c0001be9caf',
'5e7d031be805560ae6b93dba',
'630386f64c5bbd56ab1c3b0f',
'612fb53d3127a179555c1ae3',
'5fce736898fa590803b3b0d8',
'56a37d86dbe850000bfcef9d',
'63ff70394f575c66d6c1c9a3',
'5fd15934025b991384ef1116',
'5dd1ab5dd3ac2a21600f87b8',
'5f9115299908a021dfcf4fae',
'5d4732b70829350016ed314d',
'5fa86899f519ba6f291dbf41',
'5fc6a3a40fa45d0875801073',
'636590165e6fcc3e84ee2b6d',
'5cbe2edd577eb000184124b9',
'5e8bfe353faaeb0efb3eba88',
'645466e1bd17070ac5692eaf',
'62840ccca4e83b85b1c11a27',
'5e9fb21375fbf815d491d394',
'63ed0ea6e613f50dfb1da55c',
'6171e8e245a38a69a90285c5',
'5b20c5e04c72120001f25dda',
'5a6eac90d5d4cb0001d6815a',
'5d42e88d7252cf0001e09d26',
'84610',
'88189',
'89020',
'89896',
'89665',
'89140',
'89773',
'89935',
'89947',
'89833',
'89536',
'88984',
'89485',
'89728',
'89788',
'86209',
'79864',
'89167',
'89365',
'89509',
'88171',
'87580',
'89830',
'90001',
'90172',
'89581',
'88039',
'87316',
'89416',
'87694',
'89623',
'79993',
'82774',
'87358',
'80944',
'87502',
'89626',
'88198',
'87727',
'89572',
'90166',
'87565',
'88228',
'87664',
'79948',
'87319',
'89749',
'89671',
'89692',
'89500',
'90007',
'61585c543992a499cf335e6e',
'89587',
"60ddc7abdf6661b9c294691f",
"61549a2caa92d84f392000e9",
"644857a2d21eca3ffb31101e",
"577d11f88b3e2300016d74a0",
"5907f9e49ae6ed000160dc4b",
"59cf062758b71700019882d4",
"5a0071766e1ea9000124db35",
"5a02083e087f2e0001eadbdbv",
"5a8f3dd5eea3d300016ece86",
"5b060d9e68eff50001d1a2c1",
"5b066e00f58f8400018b0906",
"5bb4e16389233700011354f8",
"5be36bc924f70e00018afd68",
"5be4c8d0d4079000014c0998",
"5c4bc384b4f50700015dd0a3",
"5c6e2e85806b55000119d515",
"5ca3ccae7958d0001689df68",
"5d092069fb1a540001dd5028",
"5d254db8bb2e30001933fe36",
"5d264dc7e4a0cb001a3efea6",
"5d4e212b81ca1c001b21672c",
"5dcca657854936945d68eaa9",
"5dd03c5486c8861300974102",
"5dd3f4045686c13de81c0b20",
"5dd43c63390fb6428d4974f0",
"5dd5a02b4fee995505ee89c2",
"5dd5c04f86c88658b24d4cde",
"5de7d12c26dd95000b6824c5",
"5e4465013f75e52fc82f7096",
"5e519c1b7243ea1d0aa361d6",
"5eb44aa8de8a2a291bd522df",
"5ec49137e7928537488485ea",
"5ecbfc627a51250bfb1f297f",
"5efcf906346ca111efac889f",
"5f3ac1732efa0a74f975b1a8",
"5f95a44920f542417f4263cb",
"5fbae54831099083583afff0",
"5fc10e3c8200cf0b1b66714c",
"5ff1fd761d6cb468718cdbeb",
"60045900ccb68e4bdd23111e",
"6019bbb66e5c2815ba3728b6",
"6020606d7b0258677b881f63",
"6088c08b5db0d7af3daf4b69",
"609b6c918ad180505fefd919",
"60b64f8fcb8c7f069a44a0e9",
"60b8e59ef963cd7c6989cd37",
"60cd717e463162435e3b7d46",
"60f98abd446a8ee5ed91a8cd",
"60ff46f0d588d3f6f641a0ee",
"6105f4dcf71fdd55fa93b7f5",
"6107088428de1480e9588e38",
"610a151c96de07b15f28c8cb",
"610c2a0c28529dc4e1b46f0c",
"611276cd39c2179c678fca78",
"61267e282a445af9eb95beae",
"6136dcd3faf36cac08e0438f",
"6156a0460b95fa57be8312c4",
"6159fe7811a7e1b94401c33f",
"61632b52ab37a7fde834300f",
"61fa943b5719bc09cb834ebb",
"627a9c07dd6b4cb9de3a9222",
"62827896d034545333f4610c",
"628fb4c3880a08418cedd2d2",
"62a0a145febfebefa7162539",
"62b1f567d5f22515024421f1",
"62c431f8b8e7dec0d2c03ea7",
"62c43f3dc521456f7320356f",
"62f7a739f21a1669968bae73",
"631b32b0796f2941b55e7d58",
"63614cab87b22b72231c66e0",
"63644514902f60174b4b29a1",
"6372d1f14a6bd3713c1c0acf",
"6373aee9c736637f71011482",
"638144b112820e51c06fb151",
"638b595f301bf0f33f345084",
"63b4dd8e84ed3fa65db72f4d",
"63c09186d75a9bbd3bec5652",
"63c25e4d8faec4d0ce9b0971",
"63ce8e557f1649202fdb045f",
"63e42833b46647e4119fbcb9",
"63e5b3e89a3823139cb9d35e",
"63f79194eb27c9dc523185bd",
"6400d88d96f94773b356d8f1",
"640c92a322b87202716ce6a6",
"64360bec4a0f7a0288f847fa",
"6442e71471e6b5dda4f99988") #Ps whose data you don't want to analyze even if it looks good. Many of these are subjects from previous versions of ARL-BV. The last three are subjects who didn't submit.
clear out results from old analyses
#clear out results from old analyses
system("mv /Users/dp/projects/ARL_bv/analysis_data/*.csv /Users/dp/projects/ARL_bv/analysis_data/old_analysis_data") #move any CSV files in this folder to old_analysis_data folder
system("rm -rf /Users/dp/projects/ARL_bv/analysis_data/qc_plots/trial_level_vars/*") #clear the folder containing trial-level plots
system("rm -f /Users/dp/projects/ARL_bv/analysis_data/qc_plots/sub_level_variables.pdf") #remove old subject level variable plot
source(paste0(path_to_s22,"code/functions/s22_utilities.R")) #get s22 functions
source(paste0(path_to_arl,"code/functions/arl_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/arlbv_wrangle_psychopy_data.R"))
csvs_to_analyze <- get_csvs_to_analyze(path_to_project_directory,ids_to_exclude) #get the usable CSVs to analyze
all_data <- lapply(csvs_to_analyze, arlbv_wrangle_psychopy_data) #reformats each CSV, turning it into a long dataset usable for analysis, and adds all variables of interest that can be created from the raw data alone.
#Returns a list - one element for each subject - where each element is itself a list containing dfs with the trial-level data and subject-level data
trials_list <- lapply(all_data, function(l) l[[1]]) #get a list of the trial-level dfs only
trial_level_data <- do.call(rbind,trials_list) #stack trial dfs into one big df
sub_list <- lapply(all_data, function(l) l[[2]]) #get a list of the subject-level dfs only
sub_level_data <- do.call(rbind,sub_list) #stack them into one big data frame
#write both to CSVs
date_time <- Sys.time() %>% chartr(" ","_",.) %>% chartr(":","_",.) #grab the date and time, reformatting ':' and '-' to  '_' so you can label the files with it
write.csv(trial_level_data,paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#write subject-level data
write.csv(sub_level_data,paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_",date_time,".csv"),row.names = FALSE)
#HERE
#Create plot grids of select variables for quality checking. These are saved to the qc_plots folder
tl_hists <- c("val_rat_rt","dec_rt","val_rat") #trial level variables to plot
plot_trial_level_vars(trial_level_data,tl_hists,path_to_project_directory) #create and save plot grids
sl_hists <- c("consecutive_late_choices","instruct_keypress","valrat_autoprocess",
"answers_correct","answers_incorrect","earnings_before_ec",
"bv_check_passed","rev_check_passed","val_check_passed","att_checks_passed",
"percent_left","percent_left_b1","percent_left_b2","percent_left_b3","late_percent","trials_completed","valrat_skipped_percent","sd_valrat",
"mean_dec_rt","mean_valrat_rt","total_experiment_time") #subject-level variables to plot
plot_sub_level_vars(sub_level_data,sl_hists,path_to_project_directory) #create and save plot grids
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores=6)
path_to_project_directory <- "~/projects/ARL_bv/"
path_to_arl <- "~/projects/ARL/"
path_to_s22 <- "~/projects/spring_2022_study/"
source(paste0(path_to_s22,"code/functions/s22_utilities.R")) #get s22 functions
source(paste0(path_to_s22,"code/functions/stan_utilities.R"))
source(paste0(path_to_arl,"code/functions/arl_utilities.R"))
source(paste0(path_to_project_directory,"code/functions/arlbv_utilities.R"))
source(paste0(path_to_s22,"code/functions/fit_stan_model.R"))
library(tidyverse)
library(lme4)
library(MuMIn)
library(GGally)
library(cmdstanr)
library(tidyverse)
library(tidybayes)
library(loo)
library(bayesplot)
library(sigmoid)
stan_model_dir <- paste0(path_to_project_directory,"code/stan_models/clean_mods/")
model_out_dir <- paste0(path_to_project_directory,"output/results/stan_model_fits/clean_mods/")
trials <- read.csv(paste0(path_to_project_directory,"analysis_data/trial_level_data_all_subs_2023-09-27_13_06_31.69664.csv"))
subs <- read.csv(paste0(path_to_project_directory,"analysis_data/sub_level_data_all_subs_2023-09-27_13_06_31.69664.csv"))
sub_hard_fail <- subs %>% filter(att_checks_passed < 5 |
valrat_skipped_percent > .1 |
late_percent > .2 |
consecutive_late_choices > 9 |
trials_completed < 144 |
sd_valrat < .1 |
percent_left > .8 |
percent_left < .2 |
percent_left_b1 < .1 |
percent_left_b1 > .9 |
percent_left_b2 < .1 |
percent_left_b2 > .9 |
percent_left_b3 < .1 |
percent_left_b3 > .9 |
answers_incorrect > 2)
#count the number of soft QC cutoffs each subject meets
subs$softs <- 0
for(i in 1:nrow(subs)){
subs$softs[i] <- length(which(c(subs$att_checks_passed[i] == 5,subs$valrat_skipped_percent[i] > .05, subs$late_percent[i] > .15,
subs$sd_valrat[i] < .13, subs$percent_left[i] > .75, subs$percent_left[i] < .25,
subs$percent_left_b1[i] > .83, subs$percent_left_b1[i] < .17, subs$percent_left_b2[i] > .83,
subs$percent_left_b2[i] < .17,subs$percent_left_b3[i] > .83, subs$percent_left_b3[i] < .17,subs$answers_incorrect[i] > 1)))
}
sub_soft_fail <- filter(subs,softs >= 2) #identify those who meet more than 2 soft cutoffs
subs_to_exclude <- unique(c(sub_hard_fail$id,sub_soft_fail$id)) #mark subjects who fail on either hard or soft or criteria for exclusion
trials <- trials %>% filter(!(id %in% subs_to_exclude)) %>% filter(choice != "late")
subs <- subs %>% filter(!(id %in% subs_to_exclude))
length(subs_to_exclude)/length(subs)
length(subs_to_exclude)
length(subs)
nrow(subs)
36/95
